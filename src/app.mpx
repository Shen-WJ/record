<script>
  import { storeUser } from './stores/storeUser'
  import { storeMode, storeNotice } from './stores/storeCommon'
  import net from './utils/net'

  const getData = function (that) {
    net.reqGet({
      url: 'love/list'
    }).then(data => {
      let dic = {}
      for (let i = 0; i < data.data.length; i++) {
        dic[data.data[i]] = 'L'
      }
      that.globalData.likesDic = dic
    })

    net.reqGet({
      url: 'collection/ids'
    }).then(data => {
      let dic = {}
      for (let i = 0; i < data.data.length; i++) {
        dic[data.data[i]] = 'F'
      }
      that.globalData.favoritesDic = dic
    })

    net.reqGet({
      url: 'user/auth'
    }).then(data => {
      let auth = data.data
      delete (auth['userId'])
      storeUser.commit('updateUserAuth', { userAuth: auth })
      console.log('authRelease? ', storeUser.getters.authRelease)
    })

    net.reqGet({
      url: 'notice/count'
    }).then(data => {
      let count = data.data
      count += (!wx.getStorageSync('isReadLocalNotice') ? 1 : 0)
      if (count > 0) {
        storeNotice.commit('updateRedDots', {
          redDots: [0, 0, 0, 0, count]
        })
      }
    })

    // 缓存中无‘曾经授权’记录则去询问服务器
    if (!storeUser.state.hasHadUserInfo) {
      net.reqGet({
        url: 'user/info'
      }).then(data => {
        if (typeof data.data.headUrl === 'string' && data.data.headUrl.length > 0) {
          // 有授权则缓存记录下来，减少打开小程序时的网络请求次数
          storeUser.commit('updateHasHadUserInfo', { hasHadUserInfo: true })
          storeUser.commit('updateUserInfo', {
            sex: data.data.sex,
            nickname: data.data.nickname,
            headUrl: data.data.headUrl
          })
          storeUser.commit('updateSignature', { signature: data.data.signature })
          storeUser.commit('updateFollowCount', {
            followCount: data.data.followCount,
            followedCount: data.data.followedCount
          })
        }
      })
    }
  }

  App({
    onLaunch: function (option) {
      storeUser.commit('updateUserId', { userId: (wx.getStorageSync('userId') || 0) })
      storeUser.commit('updateUserCode', { userCode: (wx.getStorageSync('userCode') || '') })
      // hasHadUserInfo是指服务器是否已经有此用户的昵称头像性别三个基本信息，如果有则个人页永远不要再请求微信授权，无论当前是否授权，减少打扰用户
      storeUser.commit('updateHasHadUserInfo', { hasHadUserInfo: (wx.getStorageSync('hasHadUserInfo') || false) })

      storeMode.commit('chooseBlackTheme', { isOpen: (wx.getStorageSync('darkMode') || false) })
      storeMode.commit('updateCoverImg', { imgUrl: (wx.getStorageSync('coverImg') || '') })
      storeMode.commit('updateOpacity', { opacity: (wx.getStorageSync('opacity') || 1) })

      // 用户静默登录
      if (storeUser.state.userId < 10000 || storeUser.state.userCode === '') {
        wx.login({
          success: res => {
            // 发送 res.code 到后台换取 openId, sessionKey, unionId
            console.log(res.code)
            net.reqGet({
              url: 'user/login',
              query: {
                code: res.code
              }
            }).then(data => {
              storeUser.commit('updateUserId', { userId: data.data.userId })
              storeUser.commit('updateUserCode', { userCode: data.data.code })
              getData(this)
            })
          }
        })
      } else {
        getData(this)
      }

      let menuButtonObject = wx.getMenuButtonBoundingClientRect()
      wx.getSystemInfo({
        success: (res) => {
          console.log(res)
          let statusBarHeight = res.statusBarHeight
          let navTop = menuButtonObject.top
          let navHeight = statusBarHeight + menuButtonObject.height + (menuButtonObject.top - statusBarHeight) * 2
          this.globalData.navHeight = navHeight
          this.globalData.navTop = navTop
          this.globalData.statusBarHeight = statusBarHeight
          this.globalData.windowHeight = res.windowHeight
          this.globalData.windowWidth = res.windowWidth
          console.log('windowHeight: ', res.windowHeight)
        }
      })
    },

    globalData: {
      navHeight: 0,
      navTop: 0,
      windowHeight: 0,
      statusBarHeight: 0,
      likesDic: {},
      favoritesDic: {},
      location: {},
      isTabbarPageRefresh: {
        'locality': false,
        'find': false,
        'following': false,
        'me': false
      } // 是否刷新数据，一般在定位移动了1km或者发布了新内容等时需要刷新
    }
  })
</script>

<style src="">
  .container0 {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    padding: 200rpx 0;
    box-sizing: border-box;
  }
  @import './utils/common.wxss'
</style>

<script type="application/json">
  {
    "pages": [
      "./pages/launch",
      "./pages/locality",
      "./pages/find",
      "./pages/release",
      "./pages/following",
      "./pages/me",
      "./pages/recordDetail",
      "./pages/favorites",
      "./pages/notice",
      "./pages/singleInput",
      "./pages/userInfo",
      "./pages/singleText",
      "./pages/settings",
      "./pages/mapPage",
      "./pages/otherPeople"
    ],
    "window": {
      "backgroundTextStyle": "light",
      "navigationBarBackgroundColor": "#2ab3f3",
      "navigationBarTitleText": "点 迹",
      "navigationBarTextStyle": "white",
      "navigationStyle": "custom"
    },
    "tabBar": {
      "custom": true,
      "color": "#7A7E83",
      "selectedColor": "#2ab3f3",
      "borderStyle": "black",
      "backgroundColor": "#ffffff",
      "list": [
        {
          "pagePath": "pages/locality",
          "text": "周围",
          "iconPath": "image/tabBar/home.png",
          "selectedIconPath": "image/tabBar/home1.png"
        },
        {
          "pagePath": "pages/find",
          "text": "发现",
          "iconPath": "image/tabBar/find.png",
          "selectedIconPath": "image/tabBar/find1.png"
        },
        {
          "pagePath": "pages/release",
          "text": "发布",
          "iconPath": "image/tabBar/add.png",
          "selectedIconPath": "image/tabBar/add1.png"
        },
        {
          "pagePath": "pages/following",
          "text": "关注",
          "iconPath": "image/tabBar/following.png",
          "selectedIconPath": "image/tabBar/following.png"
        },
        {
          "pagePath": "pages/me",
          "text": "我",
          "iconPath": "image/tabBar/me.png",
          "selectedIconPath": "image/tabBar/me1.png"
        }
      ]
    },
    "permission": {
      "scope.userLocation": {
        "desc": "获取定位信息"
      }
    },
    "sitemapLocation": "sitemap.json"
  }
</script>
