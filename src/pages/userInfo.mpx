<template>
  <navigationBar pageName="个人信息"/>

  <view class="container">
    <view class="table userInfo_table">
      <view class="cell1 {{darkMode?'bgColorB1':'bgColorW1'}}" bindtap="clickCell" data-index="0">
          <text class="title {{darkMode?'fontColorW1':'fontColorB1'}}">头像</text>
          <image class="headPhoto" src="{{headUrl}}" mode="aspectFit"></image>
      </view>
      <view class="cell1 {{darkMode?'bgColorB1':'bgColorW1'}}" bindtap="clickCell" data-index="1">
          <text class="title {{darkMode?'fontColorW1':'fontColorB1'}}">昵称</text>
          <text class="description">{{nickname}}</text>
      </view>
      <view class="cell1 {{darkMode?'bgColorB1':'bgColorW1'}}" bindtap="clickCell" data-index="2">
          <text class="title {{darkMode?'fontColorW1':'fontColorB1'}}">性别</text>
          <text class="description">{{genders[sex]}}</text>
      </view>
      <view class="cell1 {{darkMode?'bgColorB1':'bgColorW1'}}" bindtap="clickCell" data-index="3">
          <text class="title {{darkMode?'fontColorW1':'fontColorB1'}}">个性签名</text>
          <text class="description">{{signature}}</text>
      </view>
    </view>

    <dialog isShow="{{isShowDialog}}" title='需要授权' content='需要获得头像的授权才能获取最新的微信头像' showCancel="{{false}}" confirmText="去授权" open_type="getUserInfo" bindSuccess='authorizeUserInfo'></dialog>
  </view>

</template>

<script>
  import { createPage } from '@mpxjs/core'
  import net from '../utils/net'
  import { storeMode } from '../stores/storeCommon'
  import { storeUser } from '../stores/storeUser'
  import { behaviorOnPage } from '../behavior/behaviorOnPage'

  createPage({
    behaviors: [behaviorOnPage],
    data: {
      genders: ['未知', '男', '女'],
      isShowDialog: false
    },
    computed: {
      ...storeMode.mapState(['darkMode']),
      ...storeUser.mapState(['nickname', 'headUrl', 'sex', 'signature'])
    },

    onLoad: function (options) {
    },

    clickCell: function (e) {
      const index = parseInt(e.currentTarget.dataset.index)
      switch (index) {
        case 0: {
          wx.getSetting({
            success: (res) => {
              if (!res.authSetting['scope.userInfo']) {
                this.isShowDialog = true
              } else {
                wx.showModal({
                  title: '确定更换头像？',
                  content: '将更换为当前微信使用的头像。(由于微信后台的延迟，新头像可能无法及时获取。如此，请过几小时再试。)',
                  confirmColor: '#2ab3f3',
                  success: (res) => {
                    if (res.confirm) {
                      wx.getUserInfo({
                        success: res => {
                          net.reqPut({
                            url: 'user/headUrl',
                            body: {
                              headUrl: res.userInfo.avatarUrl
                            }
                          }).then(data => {
                            storeUser.commit('updateUserInfo', { headUrl: res.userInfo.avatarUrl })
                          })
                        }
                      })
                    }
                  }
                })
              }
            }
          })
          break
        }
        case 1: {
          wx.navigateTo({
            url: './singleInput?pageType=nickname'
          })
          break
        }
        case 2: {
          wx.showActionSheet({
            itemList: ['男', '女'],
            success: res => {
              const sex = res.tapIndex + 1
              net.reqPut({
                url: 'user/info/sexUpdate',
                body: {
                  sex: sex
                }
              }).then(data => {
                storeUser.commit('updateUserInfo', { sex: sex })
              })
            }
          })
          break
        }
        case 3: {
          wx.navigateTo({
            url: './singleInput?pageType=signature'
          })
          break
        }
      }
    },
    authorizeUserInfo (e) {
      this.isShowDialog = false
    }
  })
</script>

<style >
  .userInfo_table {
  }

  .headPhoto {
    width: 150rpx;
    height: 150rpx;
  }
  .title {
    font-size: 32rpx;
  }
  .description {
    color: #888;
    font-size: 26rpx;
    width: 500rpx;
    text-align: right;

    text-overflow: -o-ellipsis-lastline;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-all; 
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
  }
</style>
<script  type='application/json'>
  {
    "usingComponents": {
      "dialog": "../components/dialog",
      "navigationBar": "../components/navigationBar"
    }
  }
</script>

