<template>
  <navigationBar pageName="点迹"/>

  <view class="container">
    <view class="table1">
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickToSome" data-type="userInfo">
        <text>修改个人信息</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}">
        <text>开启夜间模式</text>
        <switch class="switch" checked="{{darkMode}}" bindchange="clickToSome" data-type="mode"></switch>
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickToSome" data-type="chooseImg">
        <text>更改背景图</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickToSome" data-type="about">
        <text>关于</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <button class="hided" open-type="feedback" id="feedbackBtn"/>
      <label for="feedbackBtn">
        <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}">
          <text>反馈/建议</text>
          <image src="../image/icon/arrow_right.png" />
        </view>
      </label>
    </view>
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import { storeMode } from '../stores/storeCommon'
  import { behaviorOnPage } from '../behavior/behaviorOnPage'

  createPage({
    behaviors: [behaviorOnPage],
    data: {
    },
    computed: {
      ...storeMode.mapState(['darkMode'])
    },
    openDarkMode: function (res) {
      storeMode.commit('openDarkMode',{
        isOpen: res.detail.value
      })
    },
    clickToSome: function (res) {
      let type = res.currentTarget.dataset.type
      switch (type) {
        case 'userInfo': {
          wx.navigateTo({
            url: './userInfo'
          })
          break
        }
        case 'mode': {
          storeMode.commit('openDarkMode',{
            isOpen: res.detail.value
          })
          break
        }
        case 'chooseImg': {
          wx.showActionSheet({
            itemList: ['选择（将重启小程序）', '清除背景图'],
            success: res => {
              if (res.tapIndex === 0) {
                wx.chooseImage({
                  sourceType: ['camera', 'album'],
                  sizeType: ['compressed'],
                  count: 1,
                  success (res) {
                    console.log(res.tempFilePaths[0])
                    storeMode.commit('updateCoverImg',{
                      imgUrl: res.tempFilePaths[0]
                    })
                    wx.reLaunch({
                      url: './launch'
                    })
                  }
                })
              } else {
                storeMode.commit('updateCoverImg',{
                  imgUrl: ''
                })
              }

            }
          })
          break
        }
        case 'about': {
          wx.navigateTo({
            url: './singleText?type=' + type
          })
          break
        }
      }
    }
  })
</script>

<style>
  .container {}
  .settings_cell {
  }
  .settings_cell image{
    position: relative;
    top: 50%;
    width: 40rpx;
    height: 40rpx;
    float: right;
  }
  .switch {
    float: right;
  }
</style>

<script  type='application/json' lang='json'>
  {
    "usingComponents": {
      "navigationBar": "../components/navigationBar"
    }
  }
</script>

