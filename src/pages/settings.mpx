<template>
  <navigationBar pageName="设置"/>

  <view class="container">
    <view wx:if="{{pageType === 'settings'}}" class="table1">
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickToSome" data-type="userInfo">
        <text>修改个人信息</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}">
        <text>开启夜间模式<text class="sub_desc">  将重置透明度</text></text>
        <switch class="switch" checked="{{darkMode}}" bindchange="clickToSome" data-type="mode"></switch>
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickToSome" data-type="chooseImg">
        <text>修改背景图</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <button class="hided" open-type="feedback" id="feedbackBtn"/>
      <label for="feedbackBtn">
        <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}">
          <text>建议与反馈</text>
          <image src="../image/icon/arrow_right.png" />
        </view>
      </label>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickToSome" data-type="about">
        <text>关于</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
    </view>
    <view wx:elif="{{pageType === 'bgImg'}}" class="table1">
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickBgImgOf" data-type="choose">
        <text>选择图片<text class="sub_desc">  将重启小程序</text></text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}" bindtap="clickBgImgOf" data-type="clear">
        <text>清空背景图</text>
        <image src="../image/icon/arrow_right.png" />
      </view>
      <view class="cell1 settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}">
        <text>主题皮肤</text>
        <view class="select_theme">
          <view class="select_item" style="border:2rpx solid #{{darkMode ? '2ab3f3': '888'}}" bindtap="selectTheme" data-index="0">
            <view class="select_icon" style="opacity:{{darkMode ? 1: 0}}"></view>
            <view class="select_text" style="color:#{{darkMode ? '2ab3f3': '888'}}">黑</view>
          </view>
          <view class="select_item" style="border:2rpx solid #{{!darkMode ? '2ab3f3': '888'}}" bindtap="selectTheme" data-index="1">
            <view class="select_icon" style="opacity:{{!darkMode ? 1: 0}}"></view>
            <view class="select_text" style="color:#{{!darkMode ? '2ab3f3': '888'}}">白</view>
          </view>
        </view>
      </view>
      <view class="slider_cell settings_cell {{darkMode?'fontColorW1 bgColorB1':'fontColorB1 bgColorW1'}}">
        <text>更改透明度</text>
        <slider class="slider_opacity" min="0" max="10" step="1" value="{{opacity*10}}" backgroundColor="{{darkMode?'#222':'#f6f6f6'}}" activeColor="#2ab3f3" block-color="{{darkMode?'#565656':'#fff'}}" show-value="{{true}}" bindchange="sliderChange"/>
      </view>
    </view>
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import { storeMode } from '../stores/storeCommon'
  import { behaviorOnPage } from '../behavior/behaviorOnPage'

  createPage({
    behaviors: [behaviorOnPage],
    data: {
      pageType: 'settings'
    },
    computed: {
      ...storeMode.mapState(['darkMode', 'opacity'])
    },
    onLoad: function (option) {
      if (option.pageType) {
        this.pageType = option.pageType
      }
    },

    clickToSome: function (e) {
      let type = e.currentTarget.dataset.type
      switch (type) {
        case 'userInfo': {
          wx.navigateTo({
            url: './userInfo'
          })
          break
        }
        case 'mode': {
          storeMode.commit('openDarkMode', {
            isOpen: e.detail.value
          })
          break
        }
        case 'chooseImg': {
          wx.navigateTo({
            url: './settings?pageType=bgImg'
          })
          break
        }
        case 'about': {
          wx.navigateTo({
            url: './singleText?pageType=' + type
          })
          break
        }
      }
    },
    clickBgImgOf: function (e) {
      let type = e.currentTarget.dataset.type
      switch (type) {
        case 'choose': {
          wx.chooseImage({
            sourceType: ['camera', 'album'],
            sizeType: ['compressed'], // 不能用原图，原图过大时，加载页面会有闪烁，体验极差
            count: 1,
            success: (res) => {
              console.log(res.tempFilePaths[0])
              storeMode.commit('updateCoverImg', {
                imgUrl: res.tempFilePaths[0]
              })
              wx.reLaunch({
                url: './locality'
              })
            }
          })
          break
        }
        case 'clear': {
          storeMode.commit('updateCoverImg', {
            imgUrl: ''
          })
          break
        }
        case 'theme': {
          storeMode.commit('chooseBlackTheme', {
            isOpen: e.detail.value
          })
        }
      }
    },
    selectTheme: function (e) {
      const index = parseInt(e.currentTarget.dataset.index)
      storeMode.commit('openDarkMode', {
        isOpen: index === 0
      })
    },
    sliderChange: function (e) {
      storeMode.commit('updateOpacity', {
        opacity: e.detail.value * 0.1
      })
    }
  })
</script>

<style>
  .settings_cell image {
    position: relative;
    top: 50%;
    width: 40rpx;
    height: 40rpx;
    float: right;
  }
  .sub_desc {
    font-size: 22rpx;
    color: #888;
  }
  .switch {
    float: right;
  }
  .slider_cell {
    margin: 20rpx;
    padding: 20rpx;
    border-radius: 10rpx;
  }

  .select_theme {
    display: flex;
  }
  .select_item {
    border-radius: 7rpx;
    margin-right: 10rpx;
    padding: 3rpx 10rpx;

    display: flex;
    justify-content: space-between;
    align-items: center;

    font-size: 26rpx;
  }
  .select_icon {
    width: 15rpx;
    height: 15rpx;
    border-radius: 50%;
    background-color: #2ab3f3;
    margin-right: 10rpx;
  }
</style>

<script  type='application/json' lang='json'>
  {
    "usingComponents": {
      "navigationBar": "../components/navigationBar"
    }
  }
</script>

