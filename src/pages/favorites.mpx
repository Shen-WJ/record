<template>
  <navigationBar pageName="点迹"/>
  <import src="../utils/recordItem.wxml"/>
  <import src="../utils/common.wxml"/>
  <view class="container">
    <view class="favorites">
      <template is="emptyView" data="{{isShow: !recordListRac[0].length, type:0, textArr:['还没有收藏哦！快去','添加','吧～0v0']}}"/>
      <block wx:for="{{recordListRac[0]}}" wx:key="{{item.recordId}}" wx:for-index="row">
        <template is="recordItem" data="{{record:item, rcdIndex:{section:0, row:row}, rcdType:2, darkMode:darkMode}}"/>
      </block>
    </view>
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import net from '../utils/net'
  import { storeMode } from '../stores/storeCommon'
  import { behaviorOnRecord } from '../behavior/behaviorOnRecord'
  import { behaviorOnPage} from '../behavior/behaviorOnPage'

  const common = require('../utils/common.js')

  createPage({
    behaviors: [behaviorOnRecord, behaviorOnPage],
    data: {
    },
    computed: {
      recordListRac: function () {
        return this.recordList || [[], []]
      },
      ...storeMode.mapState(['darkMode'])
    },
    onLoad: function (options) {
      this.getRequest(true)
    },

    getRequest: function (isRefresh) {
      let pageNum = isRefresh ? 0 : this.httpsData.nextPage
      net.reqGet({
        url: 'record/list/byCollection',
        query: {
          pageNum: pageNum
        }
      }).then(data => {
        if (isRefresh) {
          wx.stopPullDownRefresh()
        }

        let records = isRefresh ? [] : this.recordList[0]

        records = records.concat(common.getRecordListFrom(data.data.list))
        this.httpsData = data.data
        this.recordList = [records, []]
      })
    },

    clickMore: function (e) {
      const index = e.currentTarget.dataset.index
      wx.showActionSheet({
        itemList: ['删除收藏'],
        itemColor: '#ff0000',
        success: (res) => {
          if (res.tapIndex === 0) {
            common.clickFavorites({
              index: index,
              that: this,
              success: (res) => {
                this.deleteRecord(index)
              }
            })
          }
        }
      })
    },

    clickToSwitch: function () {
      wx.switchTab({
        url: './find'
      })
    },

    deleteRecord: function (index) {
      this.recordList[index.section].splice(index.row, 1)
    }
  })
</script>

<style >
  .container {}
</style>

<script  type='application/json'>
  {
    "enablePullDownRefresh": true,
    "usingComponents": {
      "navigationBar": "../components/navigationBar"
    }
  }
</script>