<template>
  <import src="../utils/recordItem.wxml"/>
  <import src="../utils/common.wxml"/>

  <navigationBar pageName="发现" showBackIcon="{{false}}"/>
  <swipeList categoryMenu="{{categoryMenu}}" categoryData="{{categoryData}}"
    bind:swipeTo="swipeTo" bind:pullDownRefresh="pullDownRefresh" bind:reachBottom="reachBottom">
    <view slot="{{categoryMenu[0]}}">
      <findAll id="findAll" bind:changeRequestState="changeRequestState" />
    </view>
    <view slot="{{categoryMenu[1]}}" class="tab_box_imgFlow">
      <template is="headerFilter" data="{{darkMode: darkMode, typeArr: [distanceType, sortType], indexArr: [distanceIndex, sortIndex]}}"/>
    </view>
  </swipeList>

  <image class="smallMap themeMode" style="bottom: {{tabBarBottom}}px;" src="../image/icon/toMapPage.png" mode="aspectFit" catchtap="clickToMapPage"></image>
  <dialog isShow="{{isShowDialog}}" zIndex="10001" title='需要定位来获取附近内容'
  content='点迹的众多内容服务都是基于位置信息提供的，没有定位将无法使用点迹的服务'
  showCancel="{{false}}" confirmText="前往设置" open_type="openSetting" bindsuccess='backFromSetting' />
  <tabbar selected="1" />
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import { storeMode } from '../stores/storeCommon'
  import logo1 from '../image/global/logo1.jpg'

  const common = require('../utils/common.js')

  createPage({
    data: {
      isShowDialog: false,

      imgFlowList: [[], []],
      categoryCur: 0,

      categoryMenu: ['综合', '一图流刷刷刷', '失物认领'],
      categoryData: [
        {
          name: '综合',
          requesting: false, // 请求中，显示加载动画
          end: false, // 已加载全部，不再触发上拉加载
          emptyShow: false, // 是否展示空视图，find页面不需要
          total: 0
        },
        {
          name: '一图流刷刷刷',
          requesting: false,
          end: false,
          emptyShow: false,
          total: 0
        },
        {
          name: '失物认领',
          requesting: false,
          end: false,
          emptyShow: false,
          total: 0
        }
      ]
    },
    computed: {
      ...storeMode.mapState(['darkMode'])
    },

    onLoad: function () {
      wx.canIUse('hideTabBar') && wx.hideTabBar()

      this.childPages = []
      this.childPages.push(this.selectComponent('#findAll'))
      this.childPages.push(this.selectComponent('#findImgFlow'))

      common.getLocation({
        success: (res) => {
          this.childPages[0].getRequest(true)
        },
        fail: (err) => {
          if (err.customCode && err.customCode === '1001') {
            this.isShowDialog = true
          }
        }
      })

      this.timer = setInterval(() => {
        common.getLocation()
        console.log('timer(', this.timer, ') fire!!!')
      }, 30000)
    },

    onShow: function () {
    },

    onUnload: function () {
      clearTimeout(this.timer)
    },
    pullDownRefresh: function () {
      const childP = this.childPages[this.categoryCur]
      if (typeof childP.pullDownRefresh === 'function') {
        childP.pullDownRefresh()
      }
    },
    reachBottom () {
      const childP = this.childPages[this.categoryCur]
      if (typeof childP.reachBottom === 'function') {
        childP.reachBottom()
      }
    },
    onShareAppMessage: function (res) {
      const childP = this.childPages[this.categoryCur]
      if (typeof childP.shareAppMessage === 'function') {
        return childP.shareAppMessage(res)
      } else {
        return {
          title: '点迹，让附近离你更近。',
          path: '/pages/launch',
          imageUrl: logo1
        }
      }
    },
    swipeTo (e) {
      console.log(e)
      this.categoryCur = parseInt(e.detail.categoryCur)
      // if (this.categoryCur === 1 && this.imgFlowList.length <= 0) {
      //   this.getRequest(true)
      // }
      // this.tabWaitTimer = setInterval(() => {
      //   common.getLocation()
      //   console.log('timer(', this.timer, ') fire!!!')
      // }, 30000)
    },
    changeRequestState (e) {
      console.log('changeRequestState', e)
      this.categoryData[this.categoryCur] = { ...this.categoryData[this.categoryCur], ...e.detail }
      console.log(this.categoryData)
    },
    clickToMapPage: function () {
      wx.navigateTo({
        url: './mapPage?pageType=find'
      })
    },

    backFromSetting (e) {
      console.log('backFromSetting', e)
      let authSetting = e.detail.detail.authSetting
      if (!authSetting['scope.userLocation']) {
        this.isShowDialog = true
      } else {
        this.isShowDialog = false
        common.getLocation({
          success: (res) => {
            this.getRequest(true)
          },
          fail: (err) => {
            if (err.customCode && err.customCode === '1001') {
              this.isShowDialog = true
            }
          }
        })
      }
    }
  })
</script>

<style >

</style>

<script  type='application/json'>
  {
    "disableScroll": true,
    "usingComponents": {
      "navigationBar": "../components/navigationBar",
      "swipeList": "../components/swipeList",
      "findAll": "../components/findAll",
      "findImgFlow": "../components/findImgFlow",
      "tabbar": "../components/tabbar",
      "dialog": "../components/dialog"
    }
  }
</script>