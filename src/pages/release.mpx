<template>
  <view class='releaseMask'>
    <view class="release_box" animation="{{animations[0]}}" catchtap="clickToRelease" data-type="0">
      <image class="circle circleMulti" src="../image/icon/multi.png" mode="aspectFit" />
      <text>图文点迹</text>
    </view>
    <view class="release_box" animation="{{animations[1]}}" catchtap="clickToRelease" data-type="1">
      <!-- #f4ea2a -->
      <image class="circle circleSign" src="../image/icon/sign.png" mode="aspectFit" />
      <text>快速打卡</text>
    </view>
    <view class="circle circleClose" style="bottom: calc({{tabBarBottom}}px + 40rpx);" catchtap="clickClose">×</view>
    <policyText wx:if="{{needAgreePolicy}}" class="policyText" style="bottom: calc({{tabBarBottom}}px + 5rpx);" id="policy_text" action='点击“发布”' textColor="#ababab" canClickColor='#2ab3f3'/>
    <dialog isShow="{{isShowSign}}" title='快速打卡地点' 
      confirmText="打卡" open_type="none" 
      bindsuccess='clickReleaseSign' bindcancel="clickCancelSign">
      <view class="dialog_sign">
        <view class="location">
          <input class="location_input fontColorW1" focus="{{true}}" value="{{locationName}}" bindinput="locationInput" maxlength="{{loactionNameLength}}" placeholder="填写打卡的地名(1~{{loactionNameLength}}字)" placeholder-style="color:#555;"/>
          <image class="location_choose" mode="aspectFit" src="../image/icon/toMap.png" catchtap="chooseLocation" />
          <text class="location_chooseText" catchtap="chooseLocation">地图选点</text>
        </view>
        <view class="sub_text">
          <text class="location_digit">{{locationGPS}}\t</text>
          <text class="location_length_count">{{locationName.length}}/{{loactionNameLength}}</text>
        </view>
      </view>
    </dialog>
    <dialog isShow="{{isShowDialog}}" title='发布需要头像/昵称' 
      content='在这里，留下你的点滴痕迹。没有头像/昵称可没法发布哦' 
      showCancel="{{false}}" confirmText="去授权" open_type="getUserInfo" 
      bindsuccess='authorizeUserInfo' />
    <dialog isShow="{{!authRelease.canRelease}}" showAllBtn="{{false}}"
      title='您已被封禁' content="{{'由于您发布了违规信息，已被禁止使用发布，剩余' + authRelease.leftTime}}" />
  </view>
  <view class="bottomHolder" style="padding-bottom: {{tabBarBottom}}px;"/>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import net from '../utils/net'
  import { storeUser } from '../stores/storeUser'

  const common = require('../utils/common.js')
  const app = getApp()
  const allowedDistance = 2 // 单位km
  let elements = [
    wx.createAnimation({ timingFunction: 'ease', duration: 300 }),
    wx.createAnimation({ timingFunction: 'ease', duration: 300 })
  ]
  createPage({
    data: {
      isShowDialog: false,
      tabBarBottom: app.globalData.tabBarBottom,
      authRelease: {
        canRelease: true,
        leftTime: ''
      },
      animations: [{}, {}],

      isShowSign: false,
      locationName: '',
      loactionNameLength: 25,
      locationGPS: ''
    },
    computed: {
      ...storeUser.mapState(['needAgreePolicy'])
    },
    onLoad () {
      wx.canIUse('hideTabBar') && wx.hideTabBar()
    },
    onShow () {
      if (!storeUser.state.hasHadUserInfo) {
        wx.getSetting({
          success: (res) => {
            console.log(res)
            if (!res.authSetting['scope.userInfo']) {
              this.isShowDialog = true
            } else {
              this.isShowDialog = false
            }
          }
        })
      } else { // 在其他页面授权获得了信息，则消失
        this.isShowDialog = false
        this.authRelease = { ...storeUser.getters.authRelease }
      }
      this.circlesHide(false)
    },
    clickToRelease (e) {
      const type = parseInt(e.currentTarget.dataset.type)
      switch (type) {
        case 0: {
          this.circlesHide(true)
          wx.navigateTo({
            url: './releaseMulti'
          })
          break
        }
        case 1: {
          common.getLocation({
            success: res => {
              this.circlesHide(true)
              this.isShowSign = true
              this.locationDigit = app.globalData.location
              this.locationGPS = common.formatLocation(app.globalData.location.longitude, app.globalData.location.latitude)
            }
          })
          break
        }
      }
    },
    clickClose () {
      this.circlesHide(true)
      this.closeTimer = setTimeout(() => {
        clearTimeout(this.closeTimer)
        wx.switchTab({
          url: app.globalData.routeOfRelease,
          fail: (res) => {
            wx.switchTab({
              url: './find'
            })
          }
        })
      }, 300)
    },
    circlesHide (isWithdraw) {
      let aniExports = []
      if (isWithdraw) { // 收起
        for (let i = 0; i < elements.length; i++) {
          let animation = elements[i]
          switch (i) {
            case 0: {
              animation.left('285rpx').bottom(`-180rpx`).step()
              break
            }
            case 1: {
              animation.right('285rpx').bottom(`-180rpx`).step()
              break
            }
          }
          aniExports.push(animation.export())
        }
      } else { // 展开
        for (let i = 0; i < elements.length; i++) {
          let animation = elements[i]
          switch (i) {
            case 0: {
              animation.left('100rpx').bottom(`${this.tabBarBottom + 100}px`).step()
              break
            }
            case 1: {
              animation.right('100rpx').bottom(`${this.tabBarBottom + 100}px`).step()
              break
            }
          }
          aniExports.push(animation.export())
        }
      }
      this.animations = aniExports
    },

    locationInput: function (e) {
      this.locationName = e.detail.value
    },
    chooseLocation: function (e) {
      wx.chooseLocation({
        success: choose => {
          common.getLocation({
            success: (res) => {
              console.log(choose)
              let distance = common.getKilometerDistance(choose.latitude, choose.longitude, res.latitude, res.longitude)
              if (distance > allowedDistance) {
                wx.showToast({
                  title: '可不能选超过' + allowedDistance + 'km远的地方哦',
                  icon: 'none',
                  duration: 5000
                })
              } else {
                this.locationName = choose.name
                this.locationGPS = common.formatLocation(choose.longitude, choose.latitude)
                this.locationDigit = { latitude: choose.latitude, longitude: choose.longitude }
              }
            }
          })
        }
      })
    },
    clickReleaseSign () {
      if (common.isEmpty(this.locationName)) {
        wx.showToast({
          title: '地点不得为空',
          icon: 'none'
        })
        return
      }
      // 同意用户协议
      if (storeUser.state.needAgreePolicy) {
        this.selectComponent('#policy_text').agreePolicy()
      }

      net.reqPost({
        url: 'dailyRecord/info',
        body: {
          location: this.locationName,
          lng: this.locationDigit.longitude,
          lat: this.locationDigit.latitude
        }
      }).then(data => {
        this.clearAndHideSign()
        wx.showToast({
          title: '成功',
          complete: res => {
            app.globalData.isTabbarPageRefresh['me'] = {
              categoryCur: 1,
              isRefresh: true
            }
            wx.switchTab({
              url: './me'
            })
          }
        })
      })
    },
    clickCancelSign () {
      this.clearAndHideSign()
      this.circlesHide(false)
    },
    clearAndHideSign () {
      this.locationName = ''
      this.locationGPS = ''
      this.locationDigit = app.globalData.location
      this.isShowSign = false
    },

    authorizeUserInfo (e) {
      wx.getSetting({
        success: (res) => {
          console.log(res)
          if (!res.authSetting['scope.userInfo']) {
            this.isShowDialog = true
          } else {
            this.isShowDialog = false
            common.updateUserInfo({
              userInfo: e.detail.detail.userInfo,
              iv: e.detail.detail.iv,
              encryptedData: e.detail.detail.encryptedData
            })
          }
        }
      })
    }
  })
</script>

<style>
  page {
    background-color: black;
  }
  .releaseMask {
    background-color: rgba(0, 0, 0, 0.8);
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    z-index: 10001;
  }
  .release_box {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    bottom: -180rpx;
    width: 180rpx;
    height: 180rpx;
    text-align: center;
  }
  .release_box text {
    display: block;
    margin-top: 10rpx;
    height: 40rpx;
    line-height: 40rpx;
    color: white;
    text-align: center;
    font-size: 32rpx;
  }
  .circle {
    width: 120rpx;
    height: 120rpx;
    line-height: 120rpx;
    border-radius: 50%;
    color: white;
    text-align: center;
    font-weight: bold;
    font-size: 50rpx;
  }
  .circleMulti {
    background-color: white;
  }
  .circleStory {
    background-color: #08f01c;
  }
  .circleSign {
    background-color: white;
  }
  .circleClose {
    position: absolute;
    left: 315rpx;
    bottom: 0;
    background-color: #222;
    z-index: 9001;
  }
  .policyText {
    position: absolute;
    left: 0;
    width: 750rpx;
  }

  .dialog_sign {
    padding: 30rpx 20rpx;
  }
  .location {
    display: flex;
    align-items: center;
  }
  .location_input {
    border-bottom: 1rpx solid #888;
    margin-right: 20rpx;
  }
  .location_choose {
    flex-shrink: 0;
    width: 50rpx;
    height: 50rpx;
  }
  .location_chooseText {
    flex-shrink: 0;
    font-size: 26rpx;
    color: #2ab3f3;
  }
  .sub_text {
    margin: 5rpx 15rpx 5rpx;
    height: 30rpx;
    color: #888;
    font-size: 24rpx;
  }
  .location_digit{
    color: #aaa;
    font-size: 22rpx;
    float: left;
  }
  .location_length_count{
    float: right;
  }
</style>

<script  type='application/json' lang='json'>
  {
    "usingComponents": {
      "dialog": "../components/dialog",
      "policyText": "../components/policyText"
    }
  }
</script>
