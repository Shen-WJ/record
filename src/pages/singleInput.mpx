<template>
  <navigationBar pageName="{{pageName}}" isCustomBack="{{isCustomBack}}" bindback="navBack" bindhomw="navBack"/>

  <view class="container">
    <textarea wx:if="{{pageType === 'report' || pageType === 'signature'}}" class="report_area {{darkMode?'fontColorW1':'fontColorB1'}}" value="{{contentText}}" bindinput="textInput" maxlength="{{contentTextLength}}" placeholder="{{placeHolder}}" placeholder-style="{{darkMode?'color:#555;':'color:#aaa;'}}"/>
    <input wx:elif="{{pageType === 'nickname'}}" class="nickname_input {{darkMode?'fontColorW1':'fontColorB1'}}" value="{{contentText}}" bindinput="textInput" maxlength="{{contentTextLength}}" placeholder="{{placeHolder}}" placeholder-style="{{darkMode?'color:#555;':'color:#aaa;'}}"/>

    <view class="sub_text">
      <text class="text_length_count">{{contentTextCount}}/{{contentTextLength}}</text>
    </view>

    <button class="bottom_btn" bindtap="clickBtnSend">{{btnName}}</button>

    <dialog isShow="{{isShowDialog}}" title='是否保存' content="是否保存修改？" cancelText="不保存" confirmText="保存" bindsuccess="clickSave" bindcancel="clickCancelSave"></dialog>
  </view>
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import net from '../utils/net'
  import { storeMode } from '../stores/storeCommon'
  import { storeUser } from '../stores/storeUser'
  import { behaviorOnPage } from '../behavior/behaviorOnPage'

  createPage({
    behaviors: [behaviorOnPage],
    data: {
      contentText: '',
      contentTextLength: 140,
      contentTextCount: 0,
      pageType: '',
      btnName: '',
      placeHolder: '请输入...',
      isCustomBack: true,
      isShowDialog: false
    },
    computed: {
      ...storeMode.mapState(['darkMode']),
      pageName () {
        switch (this.pageType) {
          case 'report': {
            return '举报原因'
          }
          case 'nickname': {
            return '修改昵称'
          }
          case 'signature': {
            return '修改签名'
          }
        }
      }
    },

    onLoad: function (options) {
      this.hasChanged = false

      this.pageType = options.pageType
      switch (options.pageType) {
        case 'report': {
          this.reportType = options.reportType
          this.recordId = options.recordId
          this.contentTextLength = 140
          this.btnName = '举报'
          this.placeHolder = '告诉我们举报的原因吧，我们将第一时间解决'

          this.isCustomBack = false
          break
        }
        case 'nickname': {
          this.contentTextLength = 15
          this.btnName = '确定'
          this.contentText = storeUser.state.nickname || ''
          this.placeHolder = '昵称(1-15字)'
          break
        }
        case 'signature': {
          this.contentTextLength = 50
          this.btnName = '确定'
          this.contentText = storeUser.state.signature || ''
          this.placeHolder = '简介(1-50字)'
          break
        }
      }
    },

    textInput: function (e) {
      this.hasChanged = true
      this.contentText = e.detail.value
      this.contentTextCount = e.detail.value.length
    },

    clickBtnSend: function () {
      if (this.contentText.length <= 0 && this.pageType !== 'signature') {
        wx.showToast({
          title: '不得为空',
          icon: 'none'
        })
        return
      }
      if (this.isRequseting) {
        return
      }
      this.isRequseting = true
      switch (this.pageType) {
        case 'report': {
          net.reqPost({
            url: 'report/info',
            body: {
              message: this.contentText,
              recordId: this.recordId,
              reportType: this.reportType
            }
          }).then(data => {
            let list = wx.getStorageSync('reportList') || {}
            list[this.recordId.toString()] = 'r'
            wx.setStorageSync('reportList', list)

            this.isRequseting = false
            this.contentText = ''
            wx.showToast({
              title: '已举报',
              duration: 1000
            })
            const timer = setTimeout(() => {
              clearTimeout(timer)
              wx.navigateBack({
                delta: 1
              })
            }, 1000)
          })
          break
        }
        case 'nickname': {
          const timestamp = new Date().getTime()
          net.reqPut({
            url: 'user/info/nicknameUpdate',
            body: {
              timestamp: timestamp,
              nickName: this.contentText
            }
          }).then(data => {
            this.isRequseting = false
            storeUser.commit('updateUserInfo', { nickname: this.contentText })
            wx.navigateBack({
              delta: 1
            })
          })
          break
        }
        case 'signature': {
          net.reqPut({
            url: 'user/info/signatureUpdate',
            body: {
              signature: this.contentText
            }
          }).then(data => {
            this.isRequseting = false
            storeUser.commit('updateSignature', { signature: this.contentText })
            wx.navigateBack({
              delta: 1
            })
          })
        }
      }
    },

    navBack: function () {
      if (this.hasChanged) {
        this.isShowDialog = true
      } else {
        this.clickCancelSave()
      }
    },
    clickSave () {
      this.clickBtnSend()
    },
    clickCancelSave () {
      wx.navigateBack({
        delta: 1,
        fail: (res) => {
          wx.switchTab({
            url: './locality'
          })
        }
      })
    }
  })
</script>

<style >
  .container {}

  .report_area{
    margin: 30rpx;
    border: 1rpx solid #888;
    border-radius: 4rpx;
    width: 690rpx;
    padding: 5rpx 10rpx;
    box-sizing: border-box;
  }

  .nickname_input {
    margin: 30rpx;
    border: 1rpx solid #888;
    border-radius: 4rpx;
    width: 690rpx;
    height: 80rpx;
    padding: 5rpx 10rpx;
    box-sizing: border-box;
  }

  .sub_text{
    margin: 5rpx 15rpx 0rpx;
    height: 30rpx;
  }
  .sub_text text{
    color: #888;
    font-size: 26rpx;
  }
  .text_length_count{
    float: right;
  }
  .bottom_btn{
    margin-top: 50rpx;
    color: white;
    background-color: #2ab3f3;
    width: 90%;
  }
</style>

<script  type='application/json'>
  {
    "usingComponents": {
      "dialog": "../components/dialog",
      "navigationBar": "../components/navigationBar"
    }
  }
</script>