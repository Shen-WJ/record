<template>
  <view class="tab-bar {{darkMode?'darkMode':'dayMode'}}" style="bottom:{{tabBarBottom}}px;">
    <view wx:for="{{list}}" wx:key="index" class="tab-bar-item" data-path="{{item.pagePath}}" data-index="{{index}}" bindtap="switchTab">
      <image class="tab-bar-item-image" src="{{icons[index]}}"></image>
      <view class="tab-bar-item-view" style="color: {{selected === index ? selectedColor : color}}">{{item.text}}</view>
      <view wx:if="{{redDots[index] !== 0}}" class="tab-bar-item-redDot">{{redDots[index]}}</view>
    </view>
  </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'
  import { storeMode, storeNotice } from '../stores/storeCommon'
  import home from '../image/tabBar/home.png'
  import home1 from '../image/tabBar/home1.png'
  import find from '../image/tabBar/find.png'
  import find1 from '../image/tabBar/find1.png'
  import add from '../image/tabBar/add.png'
  import add1 from '../image/tabBar/add1.png'
  import following from '../image/tabBar/following.png'
  import following1 from '../image/tabBar/following1.png'
  import me from '../image/tabBar/me.png'
  import me1 from '../image/tabBar/me1.png'

  const iconList = [home, home1, find, find1, add, add1, following, following1, me, me1]
  const app = getApp()

  createComponent({
    options: {
      styleIsolation: 'shared'
    },
    properties: {
      selected: {
        type: Number,
        value: 0
      }
    },
    data: {
      tabBarBottom: app.globalData.tabBarBottom,
      color: '#7A7E83',
      selectedColor: '#2ab3f3',
      list: [
        {
          'pagePath': '../pages/locality',
          'text': '身边'
        },
        {
          'pagePath': '../pages/find',
          'text': '发现'
        },
        {
          'pagePath': '../pages/release',
          'text': '发布'
        },
        {
          'pagePath': '../pages/following',
          'text': '关注'
        },
        {
          'pagePath': '../pages/me',
          'text': '我'
        }
      ]
    },
    computed: {
      icons: function () {
        let icons = []
        for (let i = 0; i < this.data.list.length; i++) {
          icons.push(this.selected === i ? iconList[i * 2 + 1] : iconList[i * 2])
        }
        return icons
      },
      ...storeMode.mapState(['darkMode']),
      ...storeNotice.mapState(['redDots'])
    },
    methods: {
      switchTab (e) {
        const data = e.currentTarget.dataset
        const url = data.path
        wx.switchTab({ url })
      }
    }
  })
</script>

<style>
  .tab-bar {
    position: fixed;
    left: 30rpx;
    right: 30rpx;
    height: 48px;
    display: flex;
    border-radius: 24px;
    border: 2rpx solid #888;
    z-index: 10000;
  }

  .tab-bar-item {
    position: relative;
    flex: 1;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  .tab-bar-item-redDot {
    position: absolute;
    top: 5rpx;
    right: 20rpx;
    width: 36rpx;
    height: 36rpx;
    line-height: 36rpx;
    border-radius: 50%;
    background-color: red;
    color: white;
    font-size: 20rpx;
    font-weight: bold;
  }
  .tab-bar-item-image {
    width: 27px;
    height: 27px;
  }
  .tab-bar-item-view {
    font-size: 10px;
  }
</style>

<script type='application/json' lang='json'>
  {
    "component": true
  }
</script>

