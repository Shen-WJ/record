<template>
  <map wx:if="{{darkMode}}" id="map2" class="map" layer-style="2" style="height:{{mapH}}px"
    latitude="{{latitude}}" longitude="{{longitude}}"
    subkey="HF6BZ-ZR4CU-SKTVM-BBDQC-ZB5M2-VQB2Q" 
    show-location="{{showLocation}}" enable-scroll="{{enableScroll}}"
    markers="{{markers}}" polyline="{{polyline}}" include-points="{{includePoints}}" circles="{{circles}}"
    bindregionchange="regionChange" bindcallouttap="clickCallout">
  </map>
  <map wx:else id="map1" class="map" layer-style="1" style="height:{{mapH}}px"
    latitude="{{latitude}}" longitude="{{longitude}}"
    subkey="HF6BZ-ZR4CU-SKTVM-BBDQC-ZB5M2-VQB2Q" 
    show-location="{{showLocation}}" enable-scroll="{{enableScroll}}"
    markers="{{markers}}" polyline="{{polyline}}" include-points="{{includePoints}}" circles="{{circles}}"
    bindregionchange="regionChange" bindcallouttap="clickCallout">
  </map>
</template>

<script>
  import { createComponent } from '@mpxjs/core'
  import { storeMode } from '../stores/storeCommon'

  // 一些待研究的参数 polygons
  createComponent({
    options: {
      styleIsolation: 'shared'
    },
    properties: {
      mapH: {
        type: Number,
        value: 100
      },
      latitude: {
        type: Number,
        value: 0
      },
      longitude: {
        type: Number,
        value: 0
      },
      showLocation: { // 个人页时不一定要展示
        type: Boolean,
        value: true
      },
      enableScroll: { // 是否支持拖动
        type: Boolean,
        value: true
      },
      markers: {
        type: Array,
        value: []
      },
      polyline: {
        type: Array,
        value: []
      },
      includePoints: {
        type: Array,
        value: []
      },
      circles: {
        type: Array,
        value: []
      }
    },
    data: {
    },
    computed: {
      ...storeMode.mapState(['darkMode'])
    },
    lifetimes: {
      attached: function () {
      }
    },
    methods: {
      clickCallout (e) {
        console.log('clickCallout', e.markerId)
        wx.navigateTo({
          url: './recordDetail?recordId=' + e.markerId
        })
      },
      regionChange (e) {
        this.triggerEvent('regionchange', e, {})
      }
    }
  })
</script>

<style>
  .map {
    width: 100%;
    height: 100%;
  }
</style>

<script type='application/json' lang='json'>
  {
    "component": true
  }
</script>

